[tool.poetry]
name = "repo-dispatch-event-sender"
version = "0.1.6"
description = "A GitHub Action to trigger repository_dispatch events using the GitHub CLI."
authors = ["7rikazhexde"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pre-commit = "^4.3.0"
pytest-cov = "^6.2.1"
pytest-xdist = "^3.8.0"
pytest-html = "^4.1.1"
pytest-mock = "^3.15.0"
ruff = "^0.12.12"
mypy = "^1.17.1"
taskipy = "^1.14.1"
pytest-testmon = "^2.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E402", "E501"]
per-file-ignores = {}

[tool.mypy]
files = ["repo_dispatch_event_sender", "tests", "scripts"]
python_version = "3.13"
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.pytest.ini_options]
testpaths = ["repo_dispatch_event_sender", "tests"]
pythonpath = ["."]

# Enable log output during test execution.
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"

[tool.taskipy.tasks]
test_coverage_verbose = "pytest -s -vv --cov=. --cov-branch --cov-report term-missing --cov-report html"
test_html_report = "pytest --html=htmlcov/report_page.html"
test_ci_xml = "python scripts/run_tests.py --report xml"
test_ci_term = "python scripts/run_tests.py --report term"
test_testmon = "pytest --testmon"
test_coverage = "pytest --cov=. --cov-branch --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["repo_dispatch_event_sender"]
# explicitly false to address compatibility issues with testmon and pytest-cov
# testmon and pytest-cov both use internal tracing mechanisms to track Python code execution.
# When branch coverage is enabled, pytest-cov provides more detailed tracing, but conflicts with testmon's behavior. This is a limitation of testmon.
branch = false

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
    "def main"
]

[tool.coverage.html]
directory = "htmlcov"
